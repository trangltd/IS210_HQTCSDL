/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import BUS.HoaDonBUS;
import BUS.KhachHangBUS;
import BUS.KhuyenMaiBUS;
import BUS.NhanVienBUS;
import BUS.SanPhamBUS;
import Connection.ConnectionUtils;
import DTO.HoaDon;
import DTO.KhuyenMai;
import DTO.SanPham;
import static View.SuaNhanVien_QL.isNumeric;
import java.awt.HeadlessException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author asus
 */
public class ThemHoaDon extends javax.swing.JFrame {

    /**
     * Creates new form ThemHoaDon
     */
    String user;
    ArrayList<Object> arrKhuyenMai = new ArrayList<Object>();
    ArrayList<Object> arrSanPham = new ArrayList<Object>();
    Object[] rowKM = null, rowSP = null;
    String slSan = null;
    Integer maKH = null;
    long triGia = 0;

    public ThemHoaDon(String a, Integer maKH) throws HeadlessException {
        initComponents();
        setLocationRelativeTo(null);
        this.user = a;
        this.maKH = maKH;
        loadKhuyenMaiAll();
        loadSanPhamAll();
    }

    public int checkChucVu() {
        NhanVienBUS bus = new NhanVienBUS();
        String chucVu = bus.getChucVu(user);
        if (chucVu.equals("Quản lý")) {
            return 1;
        } else if (chucVu.equals("Thu ngân")) {
            return 2;
        } else if (chucVu.equals("Bán hàng")) {
            return 3;
        } else {
            return 4;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        KhuyenMaiThem = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableSanPham = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        TableKhuyenMai = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        SanPhamThem = new javax.swing.JTable();
        InHD = new javax.swing.JButton();
        AddKM = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        SLMua = new javax.swing.JTextField();
        AddSP = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        tongTienHoaDon = new javax.swing.JLabel();
        DelKM = new javax.swing.JButton();
        DelSP = new javax.swing.JButton();
        cbb_search = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Find = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Thêm hóa đơn");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(249, 255, 254));

        KhuyenMaiThem.setBackground(new java.awt.Color(180, 222, 197));
        KhuyenMaiThem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        KhuyenMaiThem.setForeground(new java.awt.Color(0, 0, 0));
        KhuyenMaiThem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã KM", "Tên KM", "Phần trăm", "Ngày bắt đầu", "Ngày kết thúc"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        KhuyenMaiThem.setSelectionBackground(new java.awt.Color(196, 100, 96));
        KhuyenMaiThem.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        KhuyenMaiThem.setShowGrid(true);
        KhuyenMaiThem.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(KhuyenMaiThem);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImageText/tag/Hóa đơn.png"))); // NOI18N

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImageText/tag/Quay lại.png"))); // NOI18N
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        TableSanPham.setBackground(new java.awt.Color(180, 222, 197));
        TableSanPham.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TableSanPham.setForeground(new java.awt.Color(0, 0, 0));
        TableSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã SP", "Mã phiếu nhập", "Tên sản phẩm", "Giá", "Loại SP", "Màu sắc", "SL sẵn", "Ghi chú"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableSanPham.setSelectionBackground(new java.awt.Color(196, 100, 96));
        TableSanPham.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        TableSanPham.setShowGrid(true);
        TableSanPham.getTableHeader().setReorderingAllowed(false);
        TableSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableSanPhamMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TableSanPham);

        TableKhuyenMai.setBackground(new java.awt.Color(180, 222, 197));
        TableKhuyenMai.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TableKhuyenMai.setForeground(new java.awt.Color(0, 0, 0));
        TableKhuyenMai.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã KM", "Tên KM", "Phần trăm", "Ngày bắt đầu", "Ngày kết thúc"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableKhuyenMai.setSelectionBackground(new java.awt.Color(196, 100, 96));
        TableKhuyenMai.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        TableKhuyenMai.setShowGrid(true);
        TableKhuyenMai.getTableHeader().setReorderingAllowed(false);
        TableKhuyenMai.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableKhuyenMaiMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(TableKhuyenMai);

        SanPhamThem.setBackground(new java.awt.Color(180, 222, 197));
        SanPhamThem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        SanPhamThem.setForeground(new java.awt.Color(0, 0, 0));
        SanPhamThem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "Tên sản phẩm", "Giá", "Loại SP", "Màu sắc", "SL mua", "Ghi chú"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        SanPhamThem.setSelectionBackground(new java.awt.Color(196, 100, 96));
        SanPhamThem.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        SanPhamThem.setShowGrid(true);
        SanPhamThem.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(SanPhamThem);

        InHD.setBackground(new java.awt.Color(196, 100, 96));
        InHD.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        InHD.setForeground(new java.awt.Color(255, 255, 255));
        InHD.setText("In HD");
        InHD.setBorder(null);
        InHD.setBorderPainted(false);
        InHD.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        InHD.setFocusPainted(false);
        InHD.setRequestFocusEnabled(false);
        InHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InHDActionPerformed(evt);
            }
        });

        AddKM.setBackground(new java.awt.Color(196, 100, 96));
        AddKM.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        AddKM.setForeground(new java.awt.Color(255, 255, 255));
        AddKM.setText("Thêm KM");
        AddKM.setBorder(null);
        AddKM.setBorderPainted(false);
        AddKM.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AddKM.setFocusPainted(false);
        AddKM.setRequestFocusEnabled(false);
        AddKM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddKMActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Số lượng");

        SLMua.setBackground(new java.awt.Color(249, 255, 254));
        SLMua.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SLMua.setForeground(new java.awt.Color(0, 0, 0));
        SLMua.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        SLMua.setCaretColor(new java.awt.Color(0, 0, 0));

        AddSP.setBackground(new java.awt.Color(196, 100, 96));
        AddSP.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        AddSP.setForeground(new java.awt.Color(255, 255, 255));
        AddSP.setText("Thêm SP");
        AddSP.setBorder(null);
        AddSP.setBorderPainted(false);
        AddSP.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AddSP.setFocusPainted(false);
        AddSP.setRequestFocusEnabled(false);
        AddSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddSPActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Trị giá:");

        tongTienHoaDon.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        tongTienHoaDon.setForeground(new java.awt.Color(0, 0, 0));
        tongTienHoaDon.setText("0 VNĐ");

        DelKM.setBackground(new java.awt.Color(249, 255, 254));
        DelKM.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        DelKM.setForeground(new java.awt.Color(196, 100, 96));
        DelKM.setText("Xóa KM");
        DelKM.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(196, 100, 96), 1, true));
        DelKM.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DelKM.setFocusPainted(false);
        DelKM.setFocusable(false);
        DelKM.setRequestFocusEnabled(false);
        DelKM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelKMActionPerformed(evt);
            }
        });

        DelSP.setBackground(new java.awt.Color(249, 255, 254));
        DelSP.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        DelSP.setForeground(new java.awt.Color(196, 100, 96));
        DelSP.setText("Xóa SP");
        DelSP.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(196, 100, 96), 1, true));
        DelSP.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DelSP.setFocusPainted(false);
        DelSP.setFocusable(false);
        DelSP.setRequestFocusEnabled(false);
        DelSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelSPActionPerformed(evt);
            }
        });

        cbb_search.setBackground(new java.awt.Color(249, 255, 254));
        cbb_search.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cbb_search.setForeground(new java.awt.Color(0, 0, 0));
        cbb_search.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã SP", "Tên SP", "Màu sắc", "Tên loại SP" }));
        cbb_search.setFocusable(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Tìm kiếm SP theo");

        txtSearch.setBackground(new java.awt.Color(249, 255, 254));
        txtSearch.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtSearch.setForeground(new java.awt.Color(0, 0, 0));
        txtSearch.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtSearch.setCaretColor(new java.awt.Color(0, 0, 0));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Nhập vào");

        Find.setBackground(new java.awt.Color(196, 100, 96));
        Find.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Find.setForeground(new java.awt.Color(255, 255, 255));
        Find.setText("Tìm");
        Find.setBorder(null);
        Find.setBorderPainted(false);
        Find.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Find.setFocusPainted(false);
        Find.setRequestFocusEnabled(false);
        Find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FindActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel4)
                            .addGap(215, 215, 215)
                            .addComponent(tongTienHoaDon)
                            .addGap(94, 94, 94)
                            .addComponent(InHD, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addGap(21, 21, 21)
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 797, Short.MAX_VALUE)
                            .addComponent(jLabel2)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(AddKM, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(128, 128, 128)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(SLMua, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(90, 90, 90)
                                        .addComponent(AddSP, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(42, 42, 42)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addComponent(cbb_search, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(32, 32, 32)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(DelKM, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(42, 42, 42)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DelSP, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(24, 24, 24))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Find, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSearch)
                            .addComponent(cbb_search, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(Find, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(SLMua, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddSP, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddKM, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DelKM, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DelSP, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InHD, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tongTienHoaDon)
                    .addComponent(jLabel4))
                .addGap(24, 24, 24))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1090, 750));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        hide();
        TraCuuHoaDon.main(user);
    }//GEN-LAST:event_jLabel2MouseClicked

    private void TableKhuyenMaiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableKhuyenMaiMouseClicked
        // TODO add your handling code here:
        int rowSelected = TableKhuyenMai.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) TableKhuyenMai.getModel();

        String ngbd = "", ngkt = "";
        if (model.getValueAt(rowSelected, 3) != null || model.getValueAt(rowSelected, 4) != null) {
            ngbd = model.getValueAt(rowSelected, 3).toString();
            ngkt = model.getValueAt(rowSelected, 4).toString();
        }
        String ma = model.getValueAt(rowSelected, 0).toString();
        int maKM = Integer.parseInt(ma);
        String tenKM = model.getValueAt(rowSelected, 1).toString();
        String phanTram = model.getValueAt(rowSelected, 2).toString();
        float phanTramKM = Float.parseFloat(phanTram);
        Object[] row = {maKM, tenKM, phanTramKM, ngbd, ngkt};
        rowKM = row;
    }//GEN-LAST:event_TableKhuyenMaiMouseClicked

    private void AddKMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddKMActionPerformed
        // TODO add your handling code here:
        if (rowKM == null) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn khuyến mãi nào!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int rowSelected = TableKhuyenMai.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) TableKhuyenMai.getModel();
        String ma = model.getValueAt(rowSelected, 0).toString();
        int maKMAdd = Integer.parseInt(ma);

        if (model.getValueAt(rowSelected, 1).toString().equals("Sinh nhật khách hàng")) {
            if (maKH != null) {
                DateTimeFormatter dateFormat = DateTimeFormatter.ofPattern("dd/MM");
                String ngayHienTai = dateFormat.format(LocalDate.now());
                String ngS = KhachHangBUS.getNgaySinh(String.valueOf(maKH));
                if (!ngS.equals(ngayHienTai)) {
                    JOptionPane.showMessageDialog(this, "Hôm nay không phải sinh nhật của khách hàng này!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            } else {
                JOptionPane.showMessageDialog(this, "Đây là khách vãng lai, không thể thêm khuyến mãi này!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        if (model.getValueAt(rowSelected, 1).toString().equals("Khuyến mãi cho đơn hàng trên 5 triệu")) {
            if (triGia < 5000000) {
                JOptionPane.showMessageDialog(this, "Chưa đạt giá trị đơn hàng tối thiểu!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } else if (model.getValueAt(rowSelected, 1).toString().equals("Khuyến mãi cho đơn hàng trên 10 triệu")) {
            if (triGia < 10000000) {
                JOptionPane.showMessageDialog(this, "Chưa đạt giá trị đơn hàng tối thiểu!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        Object[] rowCheck = null;
        for (int i = 0; i < arrKhuyenMai.size(); i++) {
            rowCheck = (Object[]) arrKhuyenMai.get(i);
            int maKMCheck = Integer.parseInt(rowCheck[0].toString());
            if (maKMAdd == maKMCheck) {
                JOptionPane.showMessageDialog(this, "Bạn đã thêm khuyến mãi này rồi!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        int reply = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn thêm khuyến mãi này?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.NO_OPTION || reply == JOptionPane.CLOSED_OPTION) {
            return;
        }

        arrKhuyenMai.add(rowKM);
        themKhuyenMai();
        loadKhuyenMaiAll();
        rowKM = null;
        loadTongTien();
    }//GEN-LAST:event_AddKMActionPerformed

    private void TableSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableSanPhamMouseClicked
        // TODO add your handling code here:
        int rowSelected = TableSanPham.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) TableSanPham.getModel();
        String tenSP = (String) model.getValueAt(rowSelected, 1);
        String gia = model.getValueAt(rowSelected, 2).toString();
        String maLSP = model.getValueAt(rowSelected, 3).toString();
        String mauSac = (String) model.getValueAt(rowSelected, 4);
        slSan = model.getValueAt(rowSelected, 5).toString();
        String maSP = model.getValueAt(rowSelected, 0).toString();
        Object[] row = {maSP, tenSP, gia, maLSP, mauSac, slSan};
        rowSP = row;

    }//GEN-LAST:event_TableSanPhamMouseClicked

    private void AddSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddSPActionPerformed
        // TODO add your handling code here:

        if (rowSP == null) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn sản phẩm nào!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int rowSelected = TableSanPham.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) TableSanPham.getModel();
        String ma = model.getValueAt(rowSelected, 0).toString();
        int maSPAdd = Integer.parseInt(ma);

        Object[] rowCheck = null;
        for (int i = 0; i < arrSanPham.size(); i++) {
            rowCheck = (Object[]) arrSanPham.get(i);
            int maSPCheck = Integer.parseInt(rowCheck[0].toString());
            if (maSPAdd == maSPCheck) {
                JOptionPane.showMessageDialog(this, "Bạn đã thêm sản phẩm này rồi!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        if (SLMua.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Số lượng mua không được để trống!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!isNumeric(SLMua.getText())) {
            JOptionPane.showMessageDialog(this, "Hãy nhập vào 1 số", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String decimalPattern = "([0-9]*)\\.([0-9]*)";
        if (Pattern.matches(decimalPattern, SLMua.getText())) {
            JOptionPane.showMessageDialog(this, "Số không được là kiểu thập phân", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int slSanSP = Integer.parseInt(slSan);
        int slMuaSP = Integer.parseInt(SLMua.getText());
        if (slMuaSP > slSanSP) {
            JOptionPane.showMessageDialog(this, "Số lượng mua không được nhiều hơn số lượng có sẵn!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (slMuaSP <= 0) {
            JOptionPane.showMessageDialog(this, "Số lượng mua không hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int reply = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn thêm sản phẩm này?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.NO_OPTION || reply == JOptionPane.CLOSED_OPTION) {
            return;
        }

        rowSP[5] = SLMua.getText();
        arrSanPham.add(rowSP);
        themSanPham();
        SLMua.setText("");
        loadTongTien();
    }//GEN-LAST:event_AddSPActionPerformed

    private void DelKMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DelKMActionPerformed
        // TODO add your handling code here:
        int rowSelected = KhuyenMaiThem.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) KhuyenMaiThem.getModel();

        if (rowSelected == -1) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn khuyến mãi để xóa!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int reply = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.NO_OPTION || reply == JOptionPane.CLOSED_OPTION) {
            return;
        }

        model.removeRow(rowSelected);
        arrKhuyenMai.remove(rowSelected);
        loadTongTien();
    }//GEN-LAST:event_DelKMActionPerformed

    private void DelSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DelSPActionPerformed
        // TODO add your handling code here:
        int rowSelected = SanPhamThem.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) SanPhamThem.getModel();

        if (rowSelected == -1) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn sản phẩm để xóa!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int reply = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.NO_OPTION || reply == JOptionPane.CLOSED_OPTION) {
            return;
        }

        model.removeRow(rowSelected);
        arrSanPham.remove(rowSelected);
        loadTongTien();
    }//GEN-LAST:event_DelSPActionPerformed

    public void clearTB() {
        DefaultTableModel model1 = (DefaultTableModel) SanPhamThem.getModel();
        DefaultTableModel model2 = (DefaultTableModel) KhuyenMaiThem.getModel();
        int rowsSP = model1.getRowCount();
        int rowsKM = model2.getRowCount();
        for (int i = rowsSP - 1; i >= 0; i--) {
            model1.removeRow(i);
        }
        for (int i = rowsKM - 1; i >= 0; i--) {
            model2.removeRow(i);
        }
        arrKhuyenMai.clear();
        arrSanPham.clear();
    }

    private void InHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InHDActionPerformed
        // TODO add your handling code here:
        if (arrSanPham.size() <= 0) {
            JOptionPane.showMessageDialog(this, "Bạn chưa thêm sản phẩm để tạo hóa đơn!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int reply = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn tạo hóa đơn?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.NO_OPTION || reply == JOptionPane.CLOSED_OPTION) {
            return;
        }

        try {
            int soHD = 0;
            int maNV = Integer.parseInt(user);
            HoaDon hd = new HoaDon(soHD, maNV, maKH, 0, 0, 0, null, 0, 0, 0, null);
            HoaDonBUS bus = new HoaDonBUS();

            if (bus.insertHD(hd)) {
                if (bus.getSoHD() != 0) {
                    soHD = bus.getSoHD();
                    Object[] rowSPHD = null, rowKMHD = null;
                    boolean hoadonCTHD = false, hoadonCTKM = false;
                    for (int i = 0; i < arrSanPham.size(); i++) {
                        rowSPHD = (Object[]) arrSanPham.get(i);
                        int maSP = Integer.parseInt(rowSPHD[0].toString());
                        int soLuongMua = Integer.parseInt(rowSPHD[5].toString());
                        HoaDon cthd = new HoaDon(soHD, maNV, maKH, maSP, 0, soLuongMua, null, 0, 0, 0, null);
                        hoadonCTHD = bus.insertCTHD(cthd);
                        if (!hoadonCTHD) {
                            JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi, vui lòng thử lại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                            loadSanPhamAll();
                            clearTB();
                            tongTienHoaDon.setText("0 VNĐ");
                            return;
                        }
                    }
                    if (arrKhuyenMai.size() > 0) {
                        for (int i = 0; i < arrKhuyenMai.size(); i++) {
                            rowKMHD = (Object[]) arrKhuyenMai.get(i);
                            int maKM = Integer.parseInt(rowKMHD[0].toString());
                            HoaDon ctkm = new HoaDon(bus.getSoHD(), maNV, maKH, 0, maKM, 0, null, 0, 0, 0, null);
                            hoadonCTKM = bus.insertCTKM(ctkm);
                            if (!hoadonCTKM) {
                                JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi, vui lòng thử lại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                                loadSanPhamAll();
                                clearTB();
                                tongTienHoaDon.setText("0 VNĐ");
                                return;
                            }
                        }
                    }

                    if (hoadonCTHD) {
                        JOptionPane.showMessageDialog(this, "Đã tạo hóa đơn thành công!");
                        clearTB();
                        tongTienHoaDon.setText("0 VNĐ");
                        loadSanPhamAll();
                        int sohd = bus.getSoHD();
                        if (maKH != null) {
                            LayReportKhacNull(sohd);
                        } else {
                            LayReportNull(sohd);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi, vui lòng thử lại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                        loadSanPhamAll();
                        return;
                    }

                }
            } else {
                JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi, vui lòng thử lại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                loadSanPhamAll();
                return;
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_InHDActionPerformed

    private void FindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FindActionPerformed
        // TODO add your handling code here:
        String search = txtSearch.getText();
        if (search.equals("")) {
            loadSanPhamAll();
        } else {
            FindSanPham();
        }
    }//GEN-LAST:event_FindActionPerformed
    public void FindSanPham() {
        DefaultTableModel SearchTable = (DefaultTableModel) TableSanPham.getModel();
        String option = (String) cbb_search.getSelectedItem();
        String search = txtSearch.getText();
        SearchTable.setRowCount(0);

        if (option.equals("Mã SP")) {
            if (!isNumeric(txtSearch.getText())) {
                JOptionPane.showMessageDialog(this, "Hãy nhập vào 1 số", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        ArrayList<SanPham> arr = new ArrayList<SanPham>();
        arr = SanPhamBUS.timSanPham(option, search);
        SanPham dt = new SanPham();
        for (int i = 0; i < arr.size(); i++) {
            dt = arr.get(i);
            int maSP = dt.getMaSP();
            String tenSP = dt.getTenSP();
            long gia = dt.getGiaSP();
            String tenloaiSP = dt.getTenLSP();
            String mausac = dt.getMauSac();
            int slsan = dt.getSlsan();
            String ghichu = dt.getGhiChu();
            Object[] row = {maSP, tenSP, gia, tenloaiSP, mausac, slsan, ghichu};
            SearchTable.addRow(row);
        }
        if (arr.size() <= 0) {
            JOptionPane.showMessageDialog(this, "Thông tin tìm kiếm không tồn tại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void themKhuyenMai() {
        String[] header = {"Mã KM", "Tên khuyến mãi", "Phần trăm", "Ngày bắt đầu", "Ngày kết thúc"};
        DefaultTableModel dtm = new DefaultTableModel(header, 0);
        Object[] row = null;
        for (int i = 0; i < arrKhuyenMai.size(); i++) {
            row = (Object[]) arrKhuyenMai.get(i);
            dtm.addRow(row);
        }
        KhuyenMaiThem.setModel(dtm);
    }

    public void themSanPham() {
        String[] header = {"Mã SP", "Tên sản phẩm", "Giá", "Mã loại SP", "Màu sắc", "SL mua"};
        DefaultTableModel dtm = new DefaultTableModel(header, 0);
        Object[] row = null;
        for (int i = 0; i < arrSanPham.size(); i++) {
            row = (Object[]) arrSanPham.get(i);
            dtm.addRow(row);
        }
        SanPhamThem.setModel(dtm);
    }

    public void loadKhuyenMaiAll() {
        String[] header = {"Mã KM", "Tên khuyến mãi", "Phần trăm", "Ngày bắt đầu", "Ngày kết thúc"};
        DefaultTableModel dtm = new DefaultTableModel(header, 0);
        ArrayList<KhuyenMai> arr = new ArrayList<KhuyenMai>();
        arr = KhuyenMaiBUS.getKhuyenMaiHopLeAll();
        KhuyenMai km = new KhuyenMai();
        for (int i = 0; i < arr.size(); i++) {
            km = arr.get(i);
            int maKM = km.getMaKM();
            String tenKM = km.getTenKM();
            float phanTram = km.getPhanTram();
            String ngbd = km.toString(km.getNgBD());
            String ngkt = km.toString(km.getNgKT());
            Object[] row = {maKM, tenKM, phanTram, ngbd, ngkt};
            dtm.addRow(row);
        }
        TableKhuyenMai.setModel(dtm);

    }

    public void loadSanPhamAll() {
        String[] header = {"Mã SP", "Tên sản phẩm", "Giá", "Tên loại SP", "Màu sắc", "SL sẵn", "Ghi chú"};
        DefaultTableModel dtm = new DefaultTableModel(header, 0);
        ArrayList<SanPham> arr = new ArrayList<SanPham>();
        arr = SanPhamBUS.getSanPhamAll();
        SanPham dt = new SanPham();
        for (int i = 0; i < arr.size(); i++) {
            dt = arr.get(i);
            int maSP = dt.getMaSP();
            String tenSP = dt.getTenSP();
            long gia = dt.getGiaSP();
            String tenloaiSP = dt.getTenLSP();
            String mausac = dt.getMauSac();
            int slsan = dt.getSlsan();
            String ghichu = dt.getGhiChu();
            Object[] row = {maSP, tenSP, gia, tenloaiSP, mausac, slsan, ghichu};
            dtm.addRow(row);
        }
        TableSanPham.setModel(dtm);
    }

    public void loadTongTien() {
        long tongTien = 0, triGiaHoaDon = 0;
        float chietKhau = 0;

        Object[] rowSPHD = null, rowKMHD = null;
        if (arrSanPham.size() > 0) {
            for (int i = 0; i < arrSanPham.size(); i++) {
                rowSPHD = (Object[]) arrSanPham.get(i);
                long gia = Long.parseLong(rowSPHD[2].toString());
                int soLuongMua = Integer.parseInt(rowSPHD[5].toString());
                tongTien = tongTien + gia * soLuongMua;
            }
        }
        if (arrKhuyenMai.size() > 0) {
            for (int i = 0; i < arrKhuyenMai.size(); i++) {
                rowKMHD = (Object[]) arrKhuyenMai.get(i);
                float phanTramKhuyenMai = Float.parseFloat(rowKMHD[2].toString());
                chietKhau = chietKhau + phanTramKhuyenMai;
            }
        }
        if (maKH != null) {
            String maKHKhacNull = String.valueOf(maKH);
            int checkLoaiKH = KhachHangBUS.getLoaiKH(maKHKhacNull);

            switch (checkLoaiKH) {
                case 1:
                    chietKhau = (chietKhau + 0);
                    break;
                case 2:
                    chietKhau = (float) (chietKhau + 0.05);
                    break;
                case 3:
                    chietKhau = (float) (chietKhau + 0.1);
                    break;
            }

            triGiaHoaDon = (long) (triGiaHoaDon + (tongTien - tongTien * chietKhau));
        } else {
            triGiaHoaDon = (long) (triGiaHoaDon + (tongTien - tongTien * chietKhau));
        }

        triGia = triGiaHoaDon;
        tongTienHoaDon.setText(String.valueOf(triGia) + " VNĐ");
    }

    public void LayReportKhacNull(int a) throws SQLException, JRException {
        int sohd = a;
        Hashtable map = new Hashtable();
        JasperReport report = JasperCompileManager.compileReport("src\\report\\HoaDon.jrxml");

        map.put("sohd", sohd);
        try {
            Connection con = ConnectionUtils.getMyConnection();
            JasperPrint p = JasperFillManager.fillReport(report, map, con);
            JasperViewer.viewReport(p, false);
        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
        }
    }

    public void LayReportNull(int a) throws SQLException, JRException {
        int sohd = a;
        Hashtable map = new Hashtable();
        JasperReport report = JasperCompileManager.compileReport("src\\report\\HoaDonAnDanh.jrxml");

        map.put("sohd", sohd);
        try {
            Connection con = ConnectionUtils.getMyConnection();
            JasperPrint p = JasperFillManager.fillReport(report, map, con);
            JasperViewer.viewReport(p, false);
        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String arg1, Integer arg2) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThemHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThemHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThemHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThemHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThemHoaDon(arg1, arg2).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddKM;
    private javax.swing.JButton AddSP;
    private javax.swing.JButton DelKM;
    private javax.swing.JButton DelSP;
    private javax.swing.JButton Find;
    private javax.swing.JButton InHD;
    private javax.swing.JTable KhuyenMaiThem;
    private javax.swing.JTextField SLMua;
    private javax.swing.JTable SanPhamThem;
    private javax.swing.JTable TableKhuyenMai;
    private javax.swing.JTable TableSanPham;
    private javax.swing.JComboBox<String> cbb_search;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel tongTienHoaDon;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
